"use strict";class t{constructor(t){this.blob=t,this.view=new DataView(this.blob),this.offset=0,this.t=new TextDecoder}i(){return this.offset}size(){return this.blob.byteLength}seek(t){this.offset=t}o(t){const n=this.blob.slice(this.offset,this.offset+t);return this.offset+=t,n}h(){const t=this.view.getUint8(this.offset);return this.offset+=1,t}u(){const t=this.view.getUint32(this.offset,!0);return this.offset+=4,t}l(){const t=[];for(;;){const n=this.h();if(!n)break;t.push(n)}const n=new Uint8Array(t);return this.t.decode(n)}}class n{constructor(){this._=[],this.size=0,this.A=new TextEncoder}j(t){this._.push(t),this.size+=t.byteLength}m(t){this.j(new Uint8Array([t]).buffer)}p(t){this.j(new Uint32Array(t).buffer)}U(t){this.p([t])}D(t){const n=this.A.encode(t);this.j(n),this.m(0)}O(){const t=new Uint8Array(this.size);let n=0;for(const s of this._)t.set(new Uint8Array(s),n),n+=s.byteLength;return t.buffer}}class s{constructor(t){this.text="",this.key=t.u(),this.T=t.u()}N(t){t.p([this.key,this.T])}}class i{constructor(n){this.k=n.u();const i=n.u(),e=new t(n.o(i)),r=e.u();e.u(),e.u(),this.v=e.o(128),e.i(),this.messages=function(t,n,s){return Array.from({length:s},(s=>new t(n)))}(s,e,r),e.i();const o=i-e.i(),c=new t(e.o(o));this.messages.forEach((t=>{c.seek(t.T),t.text=c.l()}))}N(t){const s=new n;[...this.messages].sort(((t,n)=>t.T-n.T)).forEach((t=>{t.T=s.size,s.D(t.text)}));const i=s.O(),e=12+this.v.byteLength,r=e+8*this.messages.length,o=new n;o.p([this.messages.length,e,r]),o.j(this.v),this.messages.forEach((t=>o.p([t.key,t.T]))),o.j(i);const c=o.O();t.U(this.k),t.U(c.byteLength),t.j(c)}}function e(t,n,s){const i=document.createElement("a"),e=new Blob([n],{type:s});i.href=window.URL.createObjectURL(e),i.download=t,i.click()}window.onload=()=>{const s=document.getElementById("tojson-in");document.getElementById("tojson-btn").onclick=async()=>{if(!s.files||!s.files.length)return;const n=s.files[0].name.replace(".dat",".json"),r=await async function(n){try{const s=await n.arrayBuffer(),e=new t(s),r=new i(e).messages.map((t=>[t.key,t.text])),o=new Map(r);return JSON.stringify(Object.fromEntries(o),null,4)}catch(t){alert("Invalid DAT file!\n"+t.message)}return null}(s.files[0]);n&&r&&e(n,r,"application/json")};const r=document.getElementById("tobin-orig"),o=document.getElementById("tobin-json");document.getElementById("tobin-btn").onclick=async()=>{if(!r.files||!r.files.length)return;if(!o.files||!o.files.length)return;const s=await async function(s,e){try{const r=await e.text(),o=JSON.parse(r),c=new Map(Object.entries(o)),a=await s.arrayBuffer(),h=new t(a),u=new i(h);[...u.messages].forEach((t=>{t.text=c.get(t.key.toString())??t.text}));const d=new n;return u.N(d),d.O()}catch(t){alert("Invalid DAT file!\n"+t.message)}return null}(r.files[0],o.files[0]);s&&e("NEW_"+r.files[0].name,s,"application/octet-stream")}};

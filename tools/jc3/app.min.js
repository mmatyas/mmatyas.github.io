"use strict";class t{constructor(t){this.blob=t,this.view=new DataView(this.blob),this.offset=0,this.t=new TextDecoder}i(){return this.offset}size(){return this.blob.byteLength}seek(t){this.offset=t}h(t){const s=this.blob.slice(this.offset,this.offset+t);return this.offset+=t,s}o(){const t=this.view.getUint8(this.offset);return this.offset+=1,t}u(){const t=this.view.getUint32(this.offset,!0);return this.offset+=4,t}l(){const t=this.view.getFloat32(this.offset,!0);return this.offset+=4,t}_(){const t=[];for(;;){const s=this.o();if(!s)break;t.push(s)}const s=new Uint8Array(t);return this.t.decode(s)}}class s{constructor(){this.p=[],this.size=0,this.A=new TextEncoder}j(t){this.p.push(t),this.size+=t.byteLength}m(t){this.j(new Uint8Array([t]).buffer)}U(t){this.j(new Uint32Array([t]).buffer)}v(t){this.j(new Uint32Array(t).buffer)}I(t){this.j(new Float32Array([t]).buffer)}k(t){const s=this.A.encode(t);this.j(s),this.m(0)}O(){const t=new Uint8Array(this.size);let s=0;for(const n of this.p)t.set(new Uint8Array(n),s),s+=n.byteLength;return t.buffer}}function n(t,s=4){const n=t%s;return 0==n?0:s-n}class i{constructor(t){this.count=t.u(),this.offset=t.u()}S(t){t.v([this.count,this.offset])}}class r{constructor(t){const s=t.u(),n=t.u();if(1094993440!=s||4!=n)throw new Error("Invalid file header");this.N=new i(t),this.D=new i(t),this.J=new i(t),this.names=new i(t),this.L=t.u(),this.M=Array.from({length:9},(s=>t.u()))}S(t){t.v([1094993440,4]),this.N.S(t),this.D.S(t),this.J.S(t),this.names.S(t),t.U(this.L),t.v(this.M)}}class h{constructor(t){this.offset=t.u(),this.flags=t.u(),this.count=t.u(),t.u()}S(t){t.v([this.offset,this.flags,this.count,0])}}class o{constructor(t){this.text=null,this.key=t.u(),this.T=t.u()}S(t){t.v([this.key,this.T])}}class e{constructor(t){this.text=null,this.key=t.u(),this.T=t.u(),this.B=new h(t),this.F=t.u(),this.V=t.u(),this.W=t.u(),this.flags=t.u()}S(t){t.v([this.key,this.T]),this.B.S(t),t.v([this.F,this.V,this.W,this.flags])}}class c{constructor(t){this.q=t.u(),this.start=t.l(),this.duration=t.l(),t.u()}S(t){t.U(this.q),t.I(this.start),t.I(this.duration),t.U(0)}}class a{constructor(t){this.C=new h(t),this.G=new h(t)}S(t){this.C.S(t),this.G.S(t)}}class d{constructor(t,s,n){this.messages=t,this.H=s,this.K=n}S(t){this.messages.forEach((s=>s.S(t))),this.H.forEach((s=>s.S(t))),this.K.forEach((s=>s.forEach((s=>s.S(t)))))}}class u{constructor(t){this.P=t.u(),this.R=t.u(),this.offset=t.u(),this.size=t.u(),this.X=t.u()}S(t){t.v([this.P,this.R,this.offset,this.size,this.X])}}function w(t,s,n){return Array.from({length:n},(n=>new t(s)))}function l(t,s,n){const i=document.createElement("a"),r=new Blob([s],{type:n});i.href=window.URL.createObjectURL(r),i.download=t,i.click()}window.onload=()=>{const i=document.getElementById("tojson-in");document.getElementById("tojson-btn").onclick=async()=>{if(!i.files||!i.files.length)return;const s=i.files[0].name.replace(".stringlookup",".json"),n=await async function(s){try{const n=await s.arrayBuffer(),i=new t(n),e=(new r(i),i.i()),c=new h(i),d=new h(i);i.seek(e+d.offset);const u=new t(i.h(d.count));i.seek(e+c.offset);const l=w(a,i,c.count),f=w(o,i,l[0].C.count);f.forEach((t=>{u.seek(t.T),t.text=u._()}));const _=f.map((t=>[t.key,t.text])),y=new Map(_);return JSON.stringify(Object.fromEntries(y),null,4)}catch(t){alert("Invalid StringLookup file!\n"+t.message)}return null}(i.files[0]);s&&n&&l(s,n,"application/json")};const f=document.getElementById("tobin-orig"),_=document.getElementById("tobin-json");document.getElementById("tobin-btn").onclick=async()=>{if(!f.files||!f.files.length)return;if(!_.files||!_.files.length)return;const i=await async function(i,l){try{const f=await l.text(),_=JSON.parse(f),y=new Map(Object.entries(_)),b=await i.arrayBuffer(),g=new t(b),p=new r(g),A=g.i(),j=new h(g),m=new h(g);if(g.i()!=A+j.offset)throw new Error("Invalid language header definitions");g.seek(A+m.offset);const U=new t(g.h(m.count)),v=g.u();g.seek(p.N.offset);const E=new u(g);if(E.offset!=A)throw new Error("Invalid instance position");const I=g.h(g.size()-g.i());g.seek(A+j.offset);const k=Array.from({length:j.count},(t=>new a(g))),O=k.map((t=>{const s=w(o,g,t.C.count),n=w(e,g,t.G.count),i=n.map((t=>w(c,g,t.B.count)));return s.forEach((t=>{U.seek(t.T),t.text=U._()})),n.forEach((t=>{U.seek(t.T),t.text=U._()})),new d(s,n,i)}));if(g.i()!=A+m.offset)throw new Error("Invalid language definitions");[...O[0].messages].forEach((t=>{t.text=y.get(t.key.toString())??t.text}));const S=new s;[...O[0].messages].sort(((t,s)=>t.T-s.T)).forEach((t=>{t.T=S.size,S.k(t.text)})),[...O[0].H].sort(((t,s)=>t.T-s.T)).forEach((t=>{t.T=S.size,S.k(t.text)})),O.slice(1).forEach((t=>{[...t.messages].sort(((t,s)=>t.T-s.T)).forEach((t=>{t.T=S.size,S.k(t.text)}))}));const N=S.O(),x=m.offset+m.count+4,D=n(x,8);m.count=N.byteLength;const J=m.offset+m.count+4,L=n(x,8),M=J+L-(x+D);p.N.offset+=M,p.D.offset+=M,p.J.offset+=M,p.names.offset+=M,p.L+=M,E.size=m.offset+m.count;const T=new s;return p.S(T),j.S(T),m.S(T),k.forEach((t=>t.S(T))),O.forEach((t=>t.S(T))),T.j(N),T.U(v),T.j(new Uint8Array(L)),E.S(T),T.j(I),T.O()}catch(t){alert("Invalid StringLookup file!\n"+t.message)}return null}(f.files[0],_.files[0]);i&&l("NEW_"+f.files[0].name,i,"application/octet-stream")}};

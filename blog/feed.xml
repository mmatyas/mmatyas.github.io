<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mmatyas.github.io</title>
    <description></description>
    <link>https://mmatyas.github.io/blog/</link>
    <atom:link href="https://mmatyas.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 19 Jul 2015 21:46:03 +0200</pubDate>
    <lastBuildDate>Sun, 19 Jul 2015 21:46:03 +0200</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Cross-compiling Servo to ARM</title>
        <description>&lt;p&gt;While &lt;a href=&quot;https://github.com/servo/servo&quot;&gt;Servo&lt;/a&gt; supports Android for a while now, it turned out cross compiling to ARM devices requires &lt;a href=&quot;https://github.com/servo/servo/issues/6327&quot;&gt;some additional work&lt;/a&gt;. Now that most of these patches have landed, it is possible to build for ARM with just some minor tweaks.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;

  &lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; This tutorial has also been posted here: &lt;a href=&quot;http://browser.sed.hu/blog/20150717/cross-compiling-servo-arm&quot;&gt;http://browser.sed.hu/blog/20150717/cross-compiling-servo-arm&lt;/a&gt;. Please visit the site if you wish to leave comments.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;For reference, in this post I’m going to use Servo at commit &lt;a href=&quot;https://github.com/servo/servo/commit/73b52c095a448116c0f9db23894a0932d0d53484&quot;&gt;73b52c0&lt;/a&gt;, which requires Rust version &lt;code&gt;2d0cbf3e3e25e092bd9e4c94d08e446b680869f0&lt;/code&gt;. You will need the Rust standart library of this version, compiled to ARM. Unfortunately, you will probably have to build that yourself too, as it’s not distributed with Rust yet. The first part of the &lt;a href=&quot;https://github.com/servo/servo/wiki/Building-on-ARM-desktop-Linux&quot;&gt;on-board building guide&lt;/a&gt; describes how to do it. You will also need the ARM system libraries, but you can copy them either from the distribution running on your board or from a downloaded system installer, eg. a Raspbian image.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-a-rootfs&quot;&gt;Setting up a rootfs&lt;/h2&gt;

&lt;p&gt;First, I’m going to set up an Ubuntu 14.04 rootfs to build in a clean environment. You can safely skip this step (just don’t forget to change the paths later).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install debootstrap
sudo debootstrap --arch&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;amd64 trusty rootfs-trusty
sudo mount -o &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; /dev  rootfs-trusty/dev
sudo mount -o &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; /proc rootfs-trusty/proc
sudo mount -o &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; /sys  rootfs-trusty/sys
sudo chroot rootfs-trusty /bin/bash&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then, add a new user inside the roots (again, you can skip this):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;useradd -m servobuild -s /bin/bash
passwd servobuild
usermod -aG sudo servobuild
su - servobuild&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;All right, let’s install the ARM compiler. There are many kinds of toolchains (eg. optimized for a certain board, like the Raspberry Pi), but the default one is fine for me:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get update
sudo apt-get install g++-arm-linux-gnueabihf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install the Servo dependencies (copied from the readme):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install curl freeglut3-dev &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    libfreetype6-dev libgl1-mesa-dri libglib2.0-dev xorg-dev &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    gperf g++ cmake python-virtualenv &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    libssl-dev libbz2-dev libosmesa6-dev libxmu6 libxmu-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;

  &lt;p&gt;Note: if &lt;code&gt;python-virtualenv&lt;/code&gt; is not found, install it like this:&lt;/p&gt;

  &lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install python-setuptools
curl -O https://pypi.python.org/packages/source/v/virtualenv/virtualenv-13.0.3.tar.gz
tar xzf virtualenv-13.0.3.tar.gz &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;virtualenv-13.0.3
sudo python setup.py install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Oh, and we will also need git:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, download Servo, but leave it alone for now:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/servo/servo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;updating-dependencies&quot;&gt;Updating dependencies&lt;/h2&gt;

&lt;p&gt;I’ve just pushed some ARM patches to Servo and its dependencies, which have not landed yet. Fortunately, we can use custom versions of these repos without messing up the main Servo (Cargo) directory, so we can apply these changes already.&lt;/p&gt;

&lt;p&gt;I’m going to store these git repositories in &lt;code&gt;servo_repos&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir servo_repos &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;servo_repos&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and download each dependency which have an unlanded patch and apply it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/servo/libexpat.git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;libexpat &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
curl -LO https://github.com/servo/libexpat/pull/6.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
git apply 6.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/servo/mozjs.git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mozjs &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
curl -LO https://github.com/servo/mozjs/pull/48.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
git apply 48.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/servo/rust-mozjs.git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;rust-mozjs &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
curl -LO https://github.com/servo/rust-mozjs/pull/167.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
git apply 167.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/servo/rust-png.git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;rust-png &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
curl -LO https://github.com/servo/rust-png/pull/77.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
git apply 77.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/servo/libfontconfig.git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;libfontconfig &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
curl -LO https://github.com/servo/libfontconfig/pull/11.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
git apply 11.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/servo/glutin.git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;glutin &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
curl -LO https://github.com/servo/glutin/pull/32.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
git apply 32.diff &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we have to create a &lt;a href=&quot;http://doc.crates.io/config.html&quot;&gt;Cargo config file&lt;/a&gt; for Servo to tell the location of these repos:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/servo
mkdir .cargo

cat &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt; &amp;#39;EOF&amp;#39; &amp;gt; .cargo/config&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;paths = [&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    &amp;quot;/home/servobuild/servo_repos/libexpat&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    &amp;quot;/home/servobuild/servo_repos/libfontconfig&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    &amp;quot;/home/servobuild/servo_repos/mozjs&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    &amp;quot;/home/servobuild/servo_repos/rust-mozjs&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    &amp;quot;/home/servobuild/servo_repos/rust-png&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    &amp;quot;/home/servobuild/servo_repos/glutin&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will solve the problem of unlanded patches. Now, some dependencies have ARM cross compile patches already, but Servo doesn’t use the latest version of these. To update them, we have to initialize the build system first:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git submodule init
git submodule update
./mach bootstrap-rust
./mach bootstrap-cargo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;which will download Rust and Cargo used by Servo, and creates the directory structure to where we will copy the Rust libraries in the next section.&lt;/p&gt;

&lt;div class=&quot;note&quot;&gt;

  &lt;p&gt;Alternatively, you can just run &lt;code&gt;./mach build&lt;/code&gt;, which also does this for you, but the build itself will fail at this point.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;Now that we have set up the build system, we can get the updated dependencies like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./mach cargo-update -p freetype-sys
./mach cargo-update -p skia
./mach cargo-update -p stb_image&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;

  &lt;p&gt;You can also specify a target Git hash for each package with the &lt;code&gt;--precise&lt;/code&gt; flag. At the time of writing,&lt;/p&gt;

  &lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./mach cargo-update -p freetype-sys --precise 39b368440712818ce8b071daf04d73541640de6b
./mach cargo-update -p skia --precise 7a2ce925644274b8468099c3900425a9349757eb
./mach cargo-update -p stb_image --precise 2235148b8230828ac0b96291def283e82fc4cfdd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

  &lt;p&gt;can also be used for getting the latest versions.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&quot;installing-libraries&quot;&gt;Installing libraries&lt;/h2&gt;

&lt;p&gt;We will need to install the Rust standart library for ARM if we want to cross compile programs written in Rust. Let’s exit from the rootfs for a minute:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# log out from &amp;#39;servobuild&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# log out from the rootfs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and copy your ARM Rust libraries to the correct location:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cp -R path/to/your/rustc/lib/rustlib/arm-unknown-linux-gnueabihf rootfs-trusty/home/servobuild/servo/.servo/rust/2d0cbf3e3e25e092bd9e4c94d08e446b680869f0/rustc-1.2.0-dev-x86_64-unknown-linux-gnu/rustc/lib/rustlib/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;

  &lt;p&gt;Note: Your target directory might have a different Rust hash/version.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;We will also need to install the ARM system libraries if we don’t want to get linker errors later:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo cp -R path/to/your/lib/arm-linux-gnueabihf rootfs-trusty/lib/
sudo cp -R path/to/your/usr/lib/arm-linux-gnueabihf rootfs-trusty/usr/lib/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;note&quot;&gt;

  &lt;p&gt;If you are not working in a rootfs, just remove the &lt;code&gt;rootfs-trusty&lt;/code&gt; part of the commands.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;We’re done with the libraries, let’s go back into the rootfs:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo chroot rootfs-trusty /bin/bash
su - servobuild
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;servo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are two ‘missing header’ errors, for OpenSSL and Zlib. Apparently this is a packaging issue on certain distros. Anyway, you can fix it like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir -p /usr/include/arm-linux-gnueabihf/
sudo ln -s /usr/include/x86_64-linux-gnu/openssl /usr/include/arm-linux-gnueabihf/
sudo ln -s /usr/include/x86_64-linux-gnu/zconf.h /usr/include/arm-linux-gnueabihf/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;building&quot;&gt;Building!&lt;/h2&gt;

&lt;p&gt;Finally! If you’ve followed the previous steps correctly, running&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;CC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-linux-gnueabihf-gcc &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;CXX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-linux-gnueabihf-g++ &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;CPP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;arm-linux-gnueabihf-gcc -E&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-linux-gnueabihf-ld &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;AR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-linux-gnueabihf-ar &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RANLIB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-linux-gnueabihf-ranlib &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
./mach build --target&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;arm-unknown-linux-gnueabihf --dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;should give you&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://mmatyas.github.io/blog/assets/servocross_linkererror.png&quot; alt=&quot;Servo linking error&quot; /&gt;&lt;/p&gt;

&lt;p&gt;… a huge linker error. Don’t worry, we’ll fix this. &lt;a href=&quot;https://github.com/servo/servo/issues/6483&quot;&gt;It seems&lt;/a&gt; this is also a packaging problem on Ubuntu; some X11 linker flags are missing, and you will have to add them manually. Copy the failing command (starting from &lt;code&gt;&quot;arm-linux-gnueabihf-gcc&quot; &quot;-Wl,--as-needed&quot; &quot;-L&quot; ...&lt;/code&gt; to &lt;code&gt;... &quot;c&quot; &quot;-l&quot; &quot;m&quot; &quot;-l&quot; &quot;compiler-rt&quot;&lt;/code&gt;) to your favorite text editor, and first create a proper GCC command from it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;replace all &lt;code&gt;&quot;-l&quot; &quot;&lt;/code&gt; with &lt;code&gt;&quot;-l&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;replace all &lt;code&gt;&quot;-L&quot; &quot;&lt;/code&gt; with &lt;code&gt;&quot;-L&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;delete all &lt;code&gt;&quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And add these three flags to the end:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;-lXxf86vm -lXmu -lXcursor&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://mmatyas.github.io/blog/assets/servocross_final.png&quot; alt=&quot;Servo building final step&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you’re lucky, Servo will now build correctly and you can find it at &lt;code&gt;./target/arm-unknown-linux-gnueabihf/debug/servo&lt;/code&gt;. Congratulations!&lt;/p&gt;

&lt;h2 id=&quot;issues&quot;&gt;Issues&lt;/h2&gt;

&lt;p&gt;Servo still has some visual (X11 and OpenGL) problems on embedded Linux, whether you build on board or cross compile.&lt;/p&gt;

&lt;p&gt;For some dependencies the ARM patches cause problems when you try to compile for Android. This is currently investigated. Meanwhile, you can just remove &lt;code&gt;.cargo/config&lt;/code&gt; to use the unpatched dependencies.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jul 2015 13:46:43 +0200</pubDate>
        <link>https://mmatyas.github.io/blog/cross-compiling-servo-to-arm</link>
        <guid isPermaLink="true">https://mmatyas.github.io/blog/cross-compiling-servo-to-arm</guid>
        
        
        <category>servo</category>
        
        <category>crosscompile</category>
        
        <category>arm</category>
        
      </item>
    
  </channel>
</rss>
